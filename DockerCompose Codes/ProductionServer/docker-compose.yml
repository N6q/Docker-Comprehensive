version: "3.9"

services:
  # ==========================================================
  # üóÑÔ∏è SQL SERVER DATABASE
  # ==========================================================
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      SA_PASSWORD: ${SA_PASSWORD}
      ACCEPT_EULA: ${ACCEPT_EULA}
    ports:
      - "1433:1433"
    volumes:
      - sql_data:/var/opt/mssql
    networks:
      - backend-network
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P "$${SA_PASSWORD}" -Q "SELECT 1" -C || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  # ==========================================================
  # ‚öôÔ∏è BACKEND API (.NET 8 ‚Äì WeatherApp)
  # ==========================================================
  backend-api:
    build:
      context: ../Weather Project on DevelopmentServer/Backend
      dockerfile: Dockerfile
    container_name: backend-api
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ConnectionStrings__DefaultConnection: "Server=sqlserver;Database=WeatherDB;User ID=sa;Password=${SA_PASSWORD};TrustServerCertificate=True;"
    depends_on:
      sqlserver:
        condition: service_healthy
    ports:
      - "5000:8080"
    networks:
      - backend-network
      - frontend-network
    restart: always

  # ==========================================================
  # üåê FRONTEND (NGINX STATIC WEB)
  # ==========================================================
  frontend:
    build:
      context: ../Weather Project on DevelopmentServer/Frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - backend-api
    networks:
      - frontend-network
    restart: always

# ==========================================================
# üåâ NETWORKS
# ==========================================================
networks:
  frontend-network:
    driver: bridge
  backend-network:
    driver: bridge

# ==========================================================
# üíæ VOLUMES
# ==========================================================
volumes:
  sql_data:
